plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android' version '1.9.22'
    id "com.google.protobuf"
}

android {
    namespace 'de.kalass.agime'
    compileSdk 35
    
    buildFeatures {
        buildConfig = true
    }
    
    testOptions {
        unitTests {
            // Exclude legacy test files that use deprecated dependencies
            includeAndroidResources = true
        }
    }
    
    sourceSets {
        test {
            java {
                exclude '**/de/kalass/commons/ml/**'
                exclude '**/edu/mit/mobile/android/content/test/**'
            }
        }
    }
    
    // Vermeidet doppelte Klassen in Abhängigkeiten
    configurations.configureEach {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.jetbrains.kotlin') {
                details.useVersion '1.9.22'
            }
        }
    }

    defaultConfig {
        applicationId "de.kalass.agime"
        minSdk 23
        targetSdk 35
        versionCode 34
        versionName "0.14.0"
        
        // Set default foreground service type based on target SDK
        manifestPlaceholders.foregroundServiceType = project.hasProperty('android.injected.invoked.from.ide') ? 
            'dataSync' : // Default to dataSync for IDE builds to avoid issues
            (project.android.defaultConfig.targetSdk >= 35 ? 'shortService' : 'dataSync')

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {
    // Kotlin Standard Library - aktuelle Version
    implementation "org.jetbrains.kotlin:kotlin-stdlib:2.1.0"
    
    // AndroidX
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.core:core-ktx:1.16.0'

    implementation 'net.sf.opencsv:opencsv:2.3'
    implementation 'com.melnykov:floatingactionbutton:1.3.0'

    implementation 'com.cocosw:undobar:1.8.1@aar'

    implementation 'com.github.ksoichiro:android-observablescrollview:1.5.2'

    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'javax.inject:javax.inject:1'
    implementation files('libs/dropbox/dropbox-sync-sdk-android.jar')
    implementation files('libs/slf4j-android-1.6.1-RC1.jar')
    implementation files('libs/fuava-ctprofiler-core-1.0.1.jar')

    implementation 'com.google.guava:guava:32.1.3-android'
    implementation 'joda-time:joda-time:2.12.7'
    implementation 'com.googlecode.efficient-java-matrix-library:ejml:0.24'

    // You need to depend on the lite runtime library, not protobuf-java
    implementation 'com.google.protobuf:protobuf-javalite:4.26.1'
    
    // WorkManager für Hintergrundaufgaben
    implementation 'androidx.work:work-runtime:2.10.1'
    
    // Material Components for Android (for Snackbar, etc.)
    implementation 'com.google.android.material:material:1.12.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.robolectric:robolectric:4.15-beta-1'
    testImplementation 'androidx.test:core:1.6.1'
    testImplementation 'androidx.work:work-testing:2.10.1'
    
    // AndroidX Test dependencies for instrumented tests
    androidTestImplementation 'androidx.test:core:1.6.1'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation 'junit:junit:4.13.2'


}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:4.26.1'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}
